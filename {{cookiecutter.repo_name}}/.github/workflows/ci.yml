name: CI

on:
  push:
    branches: [ "{{ cookiecutter.default_branch }}" ]
  pull_request:
    branches: [ "{{ cookiecutter.default_branch }}" ]
  workflow_dispatch: # enable manual execution

permissions:
  contents: read
  id-token: write
  pull-requests: write

env:
  AWS_REGION: "{{ cookiecutter.aws_region }}"
  TERRAFORM_{{ cookiecutter.__environment_upper }}_DIR: "terraform/{{ cookiecutter.__environment_lower }}"
  TERRAFORM_PLAN_FILE: "workspace.plan"

jobs:
  check-and-deploy:
    name: Check and deploy
    runs-on: ubuntu-latest
    timeout-minutes: 3
    steps:
    - uses: actions/checkout@v3

    - name: Run ShellCheck
      uses: ludeeus/action-shellcheck@1.1.0
      env:
        SHELLCHECK_OPTS: --severity style --enable all --exclude SC2312 --shell bash
      with:
        check_together: yes
        scandir: "./scripts"

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: ${{ '{{' }} secrets.{{ cookiecutter.__environment_upper }}_CI_ROLE_ARN {{ '}}' }}
        aws-region: ${{ '{{' }} env.AWS_REGION {{ '}}' }}

    - uses: actions/setup-go@v3
      with:
        go-version: 1.19

    - name: Setup terraform-config-inspect
      env:
        # https://pkg.go.dev/github.com/hashicorp/terraform-config-inspect?tab=versions
        TERRAFORM_CONFIG_INSPECT_VERSION: "v0.0.0-20230522202058-dbe9bfcbfe7a"
      run: go install "github.com/hashicorp/terraform-config-inspect@${TERRAFORM_CONFIG_INSPECT_VERSION}"

    - name: Get Terraform version
      run: |
        source scripts/get_terraform_version.sh
        echo "TERRAFORM_VERSION=${TERRAFORM_VERSION}" >> "${GITHUB_ENV}"

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: ${{ '{{' }} env.TERRAFORM_VERSION {{ '}}' }}

    - name: Terraform format check
      id: fmt
      run: terraform fmt -check -recursive terraform/
      continue-on-error: true

    - name: Post Terraform format check
      if: always() && github.ref != 'refs/heads/{{ cookiecutter.default_branch }}' && (steps.fmt.outcome == 'success' || steps.fmt.outcome == 'failure')
      uses: robburger/terraform-pr-commenter@v1
      env:
        GITHUB_TOKEN: ${{ '{{' }} secrets.GITHUB_TOKEN {{ '}}' }}
      with:
        commenter_type: fmt
        commenter_input: ${{ '{{' }} format('{0}{1}', steps.fmt.outputs.stdout, steps.fmt.outputs.stderr) {{ '}}' }}
        commenter_exitcode: ${{ '{{' }} steps.fmt.outputs.exitcode {{ '}}' }}

    - name: Terraform init
      id: init
      run: terraform -chdir="${TERRAFORM_{{ cookiecutter.__environment_upper }}_DIR}" init

    - name: Post Terraform init
      if: always() && github.ref != 'refs/heads/{{ cookiecutter.default_branch }}' && (steps.init.outcome == 'success' || steps.init.outcome == 'failure')
      uses: robburger/terraform-pr-commenter@v1
      env:
        GITHUB_TOKEN: ${{ '{{' }} secrets.GITHUB_TOKEN {{ '}}' }}
      with:
        commenter_type: init
        commenter_input: ${{ '{{' }} format('{0}{1}', steps.init.outputs.stdout, steps.init.outputs.stderr) {{ '}}' }}
        commenter_exitcode: ${{ '{{' }} steps.init.outputs.exitcode {{ '}}' }}

    - name: Terraform plan
      id: plan
      run: terraform -chdir="${TERRAFORM_{{ cookiecutter.__environment_upper }}_DIR}" plan -out "${TERRAFORM_PLAN_FILE}"

    - name: Post Terraform plan
      if: always() && github.ref != 'refs/heads/{{ cookiecutter.default_branch }}' && (steps.plan.outcome == 'success' || steps.plan.outcome == 'failure')
      uses: robburger/terraform-pr-commenter@v1
      env:
        GITHUB_TOKEN: ${{ '{{' }} secrets.GITHUB_TOKEN {{ '}}' }}
      with:
        commenter_type: plan
        commenter_input: ${{ '{{' }} format('{0}{1}', steps.plan.outputs.stdout, steps.plan.outputs.stderr) {{ '}}' }}
        commenter_exitcode: ${{ '{{' }} steps.plan.outputs.exitcode {{ '}}' }}

    - name: Terraform apply
      id: apply
      if: github.ref == 'refs/heads/{{ cookiecutter.default_branch }}' && contains(fromJson('["push", "workflow_dispatch"]'), github.event_name)
      run: terraform -chdir="${TERRAFORM_{{ cookiecutter.__environment_upper }}_DIR}" apply -auto-approve "${TERRAFORM_PLAN_FILE}"
